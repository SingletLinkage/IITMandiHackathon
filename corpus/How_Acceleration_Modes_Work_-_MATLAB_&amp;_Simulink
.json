{
    "title": "How Acceleration Modes Work",
    "introduction": "",
    "chunks": [
        {
            "heading": "Overview",
            "content": "The accelerator and rapid accelerator modes use portions of the SimulinkÂ® Coderâ¢ product to create an executable.\n\nThe accelerator and rapid accelerator modes replace the interpreted code normally used in Simulink simulations, shortening model run time.\n\nAlthough the acceleration modes use some Simulink Coder code generation technology, you do not need the Simulink Coder software installed to accelerate your model.\n\nNoteThe code generated by the accelerator and rapid accelerator modes is suitable only for speeding the simulation of your model. Use Simulink Coder to generate code for other purposes."
        },
        {
            "heading": "Normal Mode",
            "content": "In normal mode, the MATLABÂ® technical computing environment is the foundation on which the Simulink software is built. Simulink controls the solver and model methods used during simulation. Model methods include such things as computation of model outputs. Normal mode runs in one process."
        },
        {
            "heading": "Accelerator Mode",
            "content": "By default, accelerator mode uses Just-in-Time (JIT) acceleration to generate an execution engine in memory instead of generating C code or MEX files. You can also have your model fall back to the classic accelerator mode, in which Simulink generates and links code into a C-MEX S-function.\n\nIn accelerator mode, the model methods are separate from the Simulink software and are part of the acceleration target code, which is used in later simulations.\n\nSimulink checks that the acceleration target code is up to date before reusing it. For more information, see Code Regeneration in Accelerated Models.\n\nThere are two modes of operation in accelerator mode."
        },
        {
            "heading": "Just-In-Time Accelerator Mode",
            "content": "In this default mode, Simulink generates an execution engine in memory for the top-level model only and not for referenced models. As a result, a C compiler is not required during simulation.\n\nBecause the acceleration target code is in memory, it is available for reuse as long as the model is open. Simulink also serializes the acceleration target code so that the model does not need rebuilding when it is opened."
        },
        {
            "heading": "Classic Accelerator Mode",
            "content": "If you want to simulate your model using the classic, C-code generating, accelerator mode, run the following command:\n\nset_param(0,'GlobalUseClassicAccelMode','on');\n\nIn this mode, Simulink generates and links code into a shared library, which communicates with the Simulink software. The target code executes in the same process as MATLAB and Simulink."
        },
        {
            "heading": "Rapid Accelerator Mode",
            "content": "Rapid accelerator mode creates a rapid accelerator standalone executable from your model. This executable includes the solver and model methods, but it resides outside of MATLAB and Simulink. It uses external mode (see External Mode Communication (Simulink Coder)) to communicate with Simulink.\n\nMATLAB and Simulink run in one process, and if a second processing core is available, the standalone executable runs there."
        }
    ],
    "link": "https://in.mathworks.com/help/simulink/ug/how-the-acceleration-modes-work.html",
    "images": [
        "https://in.mathworks.com/help/simulink/ug/rapid_accel_1a.png",
        "https://in.mathworks.com/help/simulink/ug/rapid_accel_2b.png",
        "https://in.mathworks.com/help/simulink/ug/rapid_accel_2a.png",
        "https://in.mathworks.com/help/simulink/ug/rapid_accel_3a.png"
    ]
}